# Последовательностью Фибоначчи называется
# последовательность чисел a0
# , a1
# , ..., an
# , ..., где
# a0
#  = 0, a1
#  = 1, ak
#  = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
# Input: 7
# Output: 21
# Задание необходимо решать через рекурсию

# def fib(num):
#     if num in [0, 1]:
#         return 1
#     return fib(num-1) + fib(num-2)

# n = int(input())

# print(fib(n))

# Хакер Василий получил доступ к классному журналу и
# хочет заменить все свои минимальные оценки на
# максимальные. Напишите программу, которая
# заменяет оценки Василия, но наоборот: все
# максимальные – на минимальные.
# Input: 5 -> 1 3 3 3 4
# Output: 1 3 3 3 1

# n = input().split()
# min_num = min(n, key = int)
# max_num = max(n, key = int)
# print(*[min_num if i == max_num else i for i in n])

# Напишите функцию, которая принимает одно число и
# проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое
# имеет 2 делителя: 1 и n(само число)
# Input: 5
# Output: yes 

# n = int(input())
# k = int(0)

# if n == 1 or n % 2 == 0:
#     print("no")
# elif n in (2, 3):
#     print("yes")
# else:
#     for i in range(3, (n // 2) + 1, 2):
#         if n % i == 0:
#             k += 1
#     if k == 0:
#             print("yes")
#     else:
#             print("no") 


# Дано натуральное число N и
# последовательность из N элементов.
# Требуется вывести эту последовательность в
# обратном порядке.
# Примечание. В программе запрещается
# объявлять массивы и использовать циклы
# (даже для ввода и вывода).
# Input: 2 -> 3 4
# Output: 4 3

def revers(N):
    if N == 0:
        return ''
    m = input()
    return revers(N - 1) + m + " "

N = int(input())

print(revers(N))